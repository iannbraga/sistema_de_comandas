<% # app/views/itens/_item_fields.html.erb %>
<div class="nested-fields">
  <div class="row">
    <div class="col-12 col-sm-12 col-md-4 p-2">
      <%= f.label :produto_id, "Produto", class: "form-label" %>
      <%= f.select :produto_id, Produto.all.order(:nome).map { |p| [p.nome, p.id] }, {}, autofocus: true, class: "form-select produto-select" %>
    </div>
    <div class="col-6 col-sm-6 col-md-3 p-2">
      <%= f.label :preco_unitario, "Preço unitário", class: "form-label" %>
      <%= f.number_field :preco_unitario, step: 0.01, value: 0, class: "form-control produto-preco" %>
    </div>
    <div class="col-6 col-sm-6 col-md-2 p-2">
      <%= f.label :quantidade, "Quantidade", class: "form-label" %>
      <%= f.number_field :quantidade, class: "form-control quantidade" %>
    </div>
    <div class="col-6 col-sm-6 col-md-2 p-2">
      <%= f.label :subtotal, "Subtotal", class: "form-label" %>
      <%= f.number_field :subtotal, step: 0.01, class: "form-control subtotal" %>
    </div>
    <div class="col-6 col-sm-6 col-md-1 p-2 pt-3">
      <%= link_to_remove_association f, data: { bs_toggle: "tooltip", bs_placement: "bottom", bs_title: "Remover" }, class: "btn pt-4 mt-2 link-to-remove" do %>
        <i class="bi bi-trash text-danger"></i>
      <% end %>
    </div>
  </div>
</div>

<script>
$(document).ready(function() {
  var produtos = <%= Produto.all.map { |p| [p.id, p.preco] }.to_json.html_safe %>;

  function calcularTotalVenda(nestedField, isPrecoUnitarioChanged = false) {
    var selectElement = nestedField.find('.produto-select');
    var precoElement = nestedField.find('.produto-preco');
    var quantidadeElement = nestedField.find('.quantidade');
    var subtotalElement = nestedField.find('.subtotal');

    var produto_select = selectElement.val();
    var produtoAnterior = nestedField.data('produto-id');
    var produtoMudou = produto_select != produtoAnterior;
    nestedField.data('produto-id', produto_select);

    var preco_produto = null;
    for (var i = 0; i < produtos.length; i++) {
      if (produtos[i][0] == produto_select) {
        preco_produto = produtos[i][1];
        break;
      }
    }

    if (preco_produto !== null && produtoMudou && !isPrecoUnitarioChanged) {
      precoElement.val(preco_produto);
    }

    var preco_atual = parseFloat(precoElement.val());
    var quantidade = parseFloat(quantidadeElement.val());

    if (!isNaN(preco_atual) && !isNaN(quantidade)) {
      var subtotal = preco_atual * quantidade;
      subtotalElement.val(subtotal);
      atualizarTotalGeral();
    }
  }

  function calcularTotalGeral() {
    var totalGeral = 0;

    $('.subtotal').each(function(index, subtotalElement) {
      var subtotal = parseFloat($(subtotalElement).val());
      if (!isNaN(subtotal)) {
        totalGeral += subtotal;
      }
    });

    $('.total-pedido').val(totalGeral);
  }

  function atualizarTotalGeral() {
    calcularTotalGeral();
  }

  $('.nested-fields').each(function(index, nestedField) {
    calcularTotalVenda($(nestedField));
  });

  $(document).on('change input', '.produto-select, .quantidade, .produto-preco', function() {
    var nestedField = $(this).closest('.nested-fields');
    var isPrecoUnitarioChanged = $(this).hasClass('produto-preco');
    calcularTotalVenda(nestedField, isPrecoUnitarioChanged);
  });

  // Atualizar o total ao clicar no botão de remover item
  $(document).on('click', '.link-to-remove', function() {
    setTimeout(function() {
      calcularTotalGeral();
    }, 0);
  });

  // Atualizar o total ao remover um item através do cocoon
  $(document).on('cocoon:after-remove', function() {
    calcularTotalGeral();
  });
});

</script>
